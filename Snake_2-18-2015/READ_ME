#######################################
MONGOOSE
#######################################
Creaded by:
Alex Neuenkirk
Ren C'deBaca

Mongoose is an arcade game that implements key concepts 
of AI in a fun and estetique plaform. 

The object of the game is to collect all of the Baby
mongooses before the evil snake, Nag, gobbles them
up first!!!


Build Instructions
---------------------------------------------------
Exicuteing the Mongoose file will start the game.


Game Instructions
---------------------------------------------------
Use the arrow keys to move.
Collect Babies by passing over them 


Basic Game Structure
--------------------------------------------------
The game Mongoose is a grid based game. 

A* is used over this grid to navigate the snake to its goals. (The babies)



Discription of Moduals
---------------------------------------------------
Mongoose:
	Contains the main game loop and variables nessasary for 
	the inital construction of the game 

	imports:
	sys
	pathfindAstar as pathfinder
	pygame
	pygame.locals
	math
	Snake_Class
	Vector_Class
	baby_mongoose import Baby
	random

	Main Game Setup:
	-creates colors
	-Sets up the board with tile_size, and gets the width and Height of the board 
	-Initlized Pygame, the game clock, and the window
	-Loads the images used for the obsicals 
	-creates subsurfaces to carry the obsical images 
	-Generates the Baby Mongooses' starting postions and creates objects of type Baby
		with the starting positons
	-Finds the Closest baby to the snake and generates an A* path to the baby 

	Game Loop:
	-Check if the user has Quit
	-Draw the Game Backgroups
	-Draw the Obsticals
	-Draw the Cacti
	-Draw the Babies
	-Draw the Bufferzone at Top of the screen
	- Snake Movement 
		-If Snake is far from goal -> move snake along A* path 
	-Snake Finite State Machine Triggers 
		-If snake is far from goal -> snake should be in the "Traviling" state
		-If snake is close to gaol -> snake should be in the "Offensive" state
		-If snake has been offensive for 4 seconds -> snake should be in "Attack" state  

		-Draw the snake
	-incrament delta time 
	-Clock tick
	-update the screen 


pathfindAstar:
	Contains the algorithum that preform the A* search. Also contains the board representation. 

	imports:
	math
	random

	Contains the Classes:
	-newAgent()
	-PathfindingList()
	-Board()
	-TileRecord()

baby_mongoose:
	Contains the class that manages the baby mongooses 

	imports:
	pygame

	Contains the Class:
	-Baby()

Snake_Class:
	Contains the Classes that create the snake's image as well as holds the 
	snake's atributes. The instance of snake is also created in this class. 

	imports:
	math
	Vector_Class
	pygame
	SnakeFSM 

	Contains the Classes:
	-Snake_Body()
	-Snake()
	-Timer()

	Contains the Instance:
	-snake --> main antagonist in the Game 

SnakeFSM:
	Creates the structer of the snake's FSM. The snake's movments are percribed by 
	parameters and functions within each of these states 

	imports:
	Vector_Class
	math 

	Contains the Classes: 
	-Taveling()
	-Offense()
	-Attack()
	-Transition()
	-SnakeFSM()

Vector_Class:
	Holds the class Vector that creates a vector out of two points and provides 
	a function that can preform vector addition on two Vector objects 

	Contains the Class:
	-Vector()












